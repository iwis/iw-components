/**
 * Replaces platform-native checkboxes and radio buttons controls with custom controls (a radio button, a checkbox, or a toggle).
 * Why? It is hard to style states of platform-native checkboxes and radio buttons - for example :invalid state is shown differently in different web browsers.
 * Based on: https://css-tricks.com/custom-styling-form-inputs-with-modern-css-features/ The following changes were made:
 *  - to be like in Bootstrap: the height of the controls was decreased from 21px to 16px, label font size has been increased from 14px to the default (16px),
 *                             colors has been changed, width of focused controls box-shadow has been increased from 2px to 3px, no change on :hover,
 *                             a radio button and a checkbox inner parts aren't animated, a toggle knob doesn't bounce, transitions has been speed up
 *  - code has been simplified: among others the order of CSS rules has been changed (it was possible because CSS selectors are nested more rarely)
 * When Windows scaling is enabled, then artifacts can be visible in small elements which have width/height or position not divisible by 4px. So if it is crucial
 * that there are no artifacts visible (like in a radio button or a toggle), then it is best if:
 *  - all widths and heights are a multiple of 4px,
 *  - "transform: ..." functions are used because their result can be non-integer pixels that are displayed correctly.
 */

@import "state-indicators";

.iw-form--custom-toggles .iw-form__check input {
                                                appearance: none;           // don't use platform-native controls
                                                box-sizing: border-box;     // default for radio buttons and checkboxes according to specification
                                                display: inline-block;      // default for <input>
                                                transition: border-color .15s, box-shadow .15s, background .15s;
                                              //margin: 0;                  // reset default margin
                                                border: 1px solid $gray-500;
                                                height: 16px;
                                                vertical-align: middle;

  &:disabled                                  { background: $gray-100; opacity: .9;            }  // stylelint-disable-line order/properties-order
  &:not(:disabled)                            { background: white;                           }
  &:disabled:checked                          { background: $gray-300;                         }
  &:not(:disabled):checked                    { background: $primary;  border-color: $primary; }  // stylelint-disable-line order/properties-order

  &:checked                                   { --opacity: 1;                  // show a radio button dot, and a checkbox tick
                                                --x: 50%; --color: white; }  // move a toggle knob right and make it white

  &[type="radio"]                             { border-radius: 50%; width: 16px; }
  &[type="checkbox"]:not(.iw-form__switch)    { border-radius: 5px; width: 16px; }
  &[type="checkbox"].iw-form__switch          { border-radius: 8px; width: 32px; }

  // ----- a radio button dot, a checkbox tick, and a toggle knob  ------------------------------
  &[type="radio"]::after,
  &[type="checkbox"]::after                       { box-sizing: border-box;
                                                    position: relative;
                                                    left: 50%; top: 50%;
                                                    display: block;
                                                    transition: transform .15s, opacity .15s;
                                                    height: 16px;
                                                    content: ""; }

  &[type="radio"]::after                          { border-radius: 50%; background: white;                  width: 16px; }  // a radio button dot
  &[type="checkbox"]:not(.iw-form__switch)::after { border: 4px solid white; border-left: 0; border-top: 0; width: 10px; }  // a checkbox tick
  &[type="checkbox"].iw-form__switch::after       { border-radius: 50%; background: var(--color, $gray-500);  width: 16px; }  // a toggle knob

  // left/top: 50% together with "transform: translate(-50%, -50%) [...]" centers the inner part of a control inside the control, see: https://stackoverflow.com/a/23714832/
  &[type="radio"]::after                          { transform: translate(-50%, -50%)                                scale(.5);  opacity: var(--opacity, 0); }
  &[type="checkbox"]:not(.iw-form__switch)::after { transform: translate(-50%, -50%) translateY(-10%) rotate(43deg) scale(.5);  opacity: var(--opacity, 0); }
  &[type="checkbox"].iw-form__switch::after       { transform: translate(-50%, -50%) translateX(var(--x, -50%))     scale(.75); opacity: 1;                 }

  &[type="checkbox"].iw-form__switch:disabled:not(:checked)::after { opacity: .6; }  // drop the opacity of the disabled toggle knob (1.0 is default)

  // ----- state indicators ---------------------------------------------------------------------
  @include state-indicators();  // :focus, :valid, :invalid, and :checked states

  // ----- labels (see also iw-form__check) -----------------------------------------------------
  // stylelint-disable-next-line selector-max-compound-selectors
  + label             { display: inline-block;
                        margin-left: 0.25em;
                        line-height: 1.5;
                        vertical-align: middle; }
}
